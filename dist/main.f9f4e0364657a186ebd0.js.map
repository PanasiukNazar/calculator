{"version":3,"file":"main.f9f4e0364657a186ebd0.js","mappings":"mBAAO,MAAMA,EACH,aADGA,EAEF,cAFEA,EAGH,cAGGC,EACA,IADAA,EAEG,IAFHA,EAGM,IAHNA,EAIA,ICHPC,EAAgBC,SAASC,cAAc,kBACvCC,EAAUF,SAASC,cAAc,WACjCE,EAAgBH,SAASC,cAAc,kBACvCG,EAASJ,SAASC,cAAc,eAChCI,EAAUL,SAASC,cAAc,gBACjCK,EAASN,SAASC,cAAc,eAIhCM,EAAkBC,IACrBT,EAAcU,iBAAiB,SAAUC,IACtCC,EAAYD,EAAOF,EAAM,IAG5BL,EAAcM,iBAAiB,SAAUC,IACtCE,EAASF,EAAOF,EAAM,IAGzBJ,EAAOK,iBAAiB,SAAS,KAC9BI,EAAYL,EAAM,IAGrBF,EAAOG,iBAAiB,SAAS,IAAMD,EAAMM,aAE7CT,EAAQI,iBAAiB,SAAS,IAAMD,EAAMO,gBAAe,EAG1DJ,EAAc,CAACD,EAAOF,KACrBE,EAAMM,OAAOC,aAAa,eAC3BT,EAAMU,gBAAgBR,EAAMM,OAAOG,aAAa,cACnD,EAGGP,EAAW,CAACF,EAAOF,KAClBE,EAAMM,OAAOC,aAAa,gBAC3BT,EAAMY,WAAWV,EAAMM,OAAOG,aAAa,gBAE1CT,EAAMM,OAAOC,aAAa,kBAC3BT,EAAMa,YAAYX,EAAMM,OAAOG,aAAa,iBAC/C,EAGGN,EAAeL,IAClBA,EAAMK,cACNL,EAAMc,eAAe,EAKlBC,EAAkBf,IACrBA,EAAMgB,UAGN,SAAqBhB,GAClBR,SAASyB,KAAKC,UAAYlB,EAAMmB,QAAQC,MACxC7B,EAAc8B,UAAY,yCAEjBrB,EAAMmB,QAAQC,QAAU/B,EACnB,eACA,mBACSA,iDAEdW,EAAMmB,QAAQC,QAAU/B,EACnB,eACA,mBACSA,gDAEdW,EAAMmB,QAAQC,QAAU/B,EACnB,eACA,mBACSA,2BAE1B,IArBAW,EAAMgB,UAuBN,SAAsBhB,GACnBN,EAAQ2B,UAAY,+GAE4CrB,EAAMmB,QAAQG,yFACnBtB,EAAMmB,QAAQI,oFACZvB,EAAMmB,QAAQK,4CAG9E,KCpFGxB,ECH2B,CAC9BmB,QAAS,CACNG,gBAAiB,GACjBE,YAAa,GACbD,SAAU,GACVH,MAAO/B,GAGVoC,WAAY,GAEZT,SAASU,GACNC,KAAKF,WAAWG,KAAKF,EACxB,EAEAG,UACGF,KAAKF,WAAWK,SAASJ,GAAaA,EAASC,OAClD,EAEAjB,gBAAgBqB,GACbJ,KAAKR,QAAQC,MAAQW,EACrBJ,KAAKE,SACR,EAEAjB,WAAWoB,GACQ,MAAZA,GAAmBL,KAAKM,aAGE,KAA1BN,KAAKR,QAAQI,WACdI,KAAKR,QAAQG,iBAAmBU,GAEL,KAA1BL,KAAKR,QAAQI,WACdI,KAAKR,QAAQK,aAAeQ,GAE/BL,KAAKE,UACR,EAEAI,WACG,MAAMC,EACsB,IAAzBP,KAAKR,QAAQI,UACbI,KAAKR,QAAQG,gBAAgBa,SAAS,KAEnCC,EACuB,KAA1BT,KAAKR,QAAQI,UAAmBI,KAAKR,QAAQK,YAAYW,SAAS,KAErE,OAAOD,GAA0BE,CACpC,EAEAvB,YAAYU,GACTI,KAAKU,oBAEgC,KAAjCV,KAAKR,QAAQG,kBACdK,KAAKR,QAAQI,SAAWA,GAE3BI,KAAKE,SACR,EAEAQ,oBACoC,KAA7BV,KAAKR,QAAQK,cACdG,KAAKtB,cACLsB,KAAKb,iBAERa,KAAKE,SACR,EAEAxB,cACG,OAAQsB,KAAKR,QAAQI,UAClB,KAAKjC,EACFqC,KAAKR,QAAQG,iBACTK,KAAKR,QAAQG,kBAAmBK,KAAKR,QAAQK,YACjD,MACH,KAAKlC,EACFqC,KAAKR,QAAQG,gBACVK,KAAKR,QAAQG,gBAAkBK,KAAKR,QAAQK,YAC/C,MACH,KAAKlC,EACFqC,KAAKR,QAAQG,gBACVK,KAAKR,QAAQG,gBAAkBK,KAAKR,QAAQK,YAC/C,MACH,KAAKlC,EACFqC,KAAKR,QAAQG,gBACVK,KAAKR,QAAQG,gBAAkBK,KAAKR,QAAQK,YAC/C,MACH,QACG,OAENG,KAAKE,SACR,EAEAtB,eACoC,KAA7BoB,KAAKR,QAAQK,YACdG,KAAKR,QAAQK,YAAcG,KAAKR,QAAQK,YAAYc,MAAM,GAAI,GAC5B,KAA1BX,KAAKR,QAAQI,SACrBI,KAAKR,QAAQI,SAAWI,KAAKR,QAAQI,SAASe,MAAM,GAAI,GACf,KAAjCX,KAAKR,QAAQG,kBACrBK,KAAKR,QAAQG,gBAAkBK,KAAKR,QAAQG,gBACxCiB,WACAD,MAAM,GAAI,IAEjBX,KAAKE,SACR,EAEAf,gBACGa,KAAKR,QAAQK,YAAc,GAC3BG,KAAKR,QAAQI,SAAW,GACxBI,KAAKE,SACR,EAEAvB,WACGqB,KAAKR,QAAQG,gBAAkB,GAC/BK,KAAKb,eACR,GF9GoB,CAACd,IACrBD,EAAeC,GACfe,EAAef,EAAM,ECGxBwC,CAAQxC,GAERA,EAAM6B,S","sources":["webpack://calculator/./src/app/constants.js","webpack://calculator/./src/app/dom.js","webpack://calculator/./src/app/main.js","webpack://calculator/./src/app/state.js"],"sourcesContent":["export const AVILABLE_THEME = {\r\n   first: 'theme-dark',\r\n   second: 'theme-light',\r\n   third: 'theme-toxic',\r\n};\r\n\r\nexport const AVILABLE_OPERANDS = {\r\n   addition: '+',\r\n   subtraction: '-',\r\n   multiplication: 'x',\r\n   division: '/',\r\n};\r\n","import { AVILABLE_THEME } from './constants.js';\r\n\r\nexport const bindDom = (state) => {\r\n   setupListeners(state);\r\n   setupRenderers(state);\r\n};\r\n\r\nconst $choiceSwitch = document.querySelector('.choice-switch');\r\nconst $result = document.querySelector('.result');\r\nconst $smallButtons = document.querySelector('.buttons-small');\r\nconst $equal = document.querySelector('.word-equal');\r\nconst $delete = document.querySelector('.word-delete');\r\nconst $reset = document.querySelector('.word-reset');\r\n\r\n// Listeners\r\n\r\nconst setupListeners = (state) => {\r\n   $choiceSwitch.addEventListener('click', (event) => {\r\n      choiceTheme(event, state);\r\n   });\r\n\r\n   $smallButtons.addEventListener('click', (event) => {\r\n      setSigns(event, state);\r\n   });\r\n\r\n   $equal.addEventListener('click', () => {\r\n      equalResult(state);\r\n   });\r\n\r\n   $reset.addEventListener('click', () => state.cleanAll());\r\n\r\n   $delete.addEventListener('click', () => state.sliceOneSign());\r\n};\r\n\r\nconst choiceTheme = (event, state) => {\r\n   if (event.target.hasAttribute('data-theme')) {\r\n      state.setCurrentTheme(event.target.getAttribute('data-theme'));\r\n   }\r\n};\r\n\r\nconst setSigns = (event, state) => {\r\n   if (event.target.hasAttribute('data-number')) {\r\n      state.setOperand(event.target.getAttribute('data-number'));\r\n   }\r\n   if (event.target.hasAttribute('data-operator')) {\r\n      state.setOperator(event.target.getAttribute('data-operator'));\r\n   }\r\n};\r\n\r\nconst equalResult = (state) => {\r\n   state.equalResult();\r\n   state.cleanOperands();\r\n};\r\n\r\n// Renderers\r\n\r\nconst setupRenderers = (state) => {\r\n   state.onChange(renderTheme);\r\n   state.onChange(renderResult);\r\n\r\n   function renderTheme(state) {\r\n      document.body.classList = state.current.theme;\r\n      $choiceSwitch.innerHTML = `\r\n            <p class=\" choice-first ${\r\n               state.current.theme === AVILABLE_THEME.first\r\n                  ? 'active-theme'\r\n                  : ''\r\n            }\" data-theme=\"${AVILABLE_THEME.first}\"></p>\r\n            <p class=\" choice-second ${\r\n               state.current.theme === AVILABLE_THEME.second\r\n                  ? 'active-theme'\r\n                  : ''\r\n            }\" data-theme=\"${AVILABLE_THEME.second}\"></p>\r\n            <p class=\" choice-third ${\r\n               state.current.theme === AVILABLE_THEME.third\r\n                  ? 'active-theme'\r\n                  : ''\r\n            }\" data-theme=\"${AVILABLE_THEME.third}\"></p>\r\n                `;\r\n   }\r\n\r\n   function renderResult(state) {\r\n      $result.innerHTML = `\r\n       <div class=\"result-backdown\">\r\n          <div data-previouse-number=\"first\" class=\"result-numbers\">${state.current.previousOperand}</div>\r\n          <div data-operator=\"operator\" class=\"result-numbers\">${state.current.operator}</div>\r\n          <div data-next-number=\"second\"  class=\"result-numbers\">${state.current.nextOperand}</div>\r\n       </div>\r\n        `;\r\n   }\r\n};\r\n","import '../style/main.scss';\r\n\r\nimport { createState } from './state.js';\r\nimport { bindDom } from './dom.js';\r\n\r\nconst state = createState();\r\n\r\nbindDom(state);\r\n\r\nstate.changed();\r\n","import { AVILABLE_THEME, AVILABLE_OPERANDS } from './constants.js';\r\n\r\nexport const createState = () => ({\r\n   current: {\r\n      previousOperand: '',\r\n      nextOperand: '',\r\n      operator: '',\r\n      theme: AVILABLE_THEME.first,\r\n   },\r\n\r\n   _listeners: [],\r\n\r\n   onChange(listener) {\r\n      this._listeners.push(listener);\r\n   },\r\n\r\n   changed() {\r\n      this._listeners.forEach((listener) => listener(this));\r\n   },\r\n\r\n   setCurrentTheme(mode) {\r\n      this.current.theme = mode;\r\n      this.changed();\r\n   },\r\n\r\n   setOperand(operand) {\r\n      if (operand === '.' && this.hasPoint()) {\r\n         return;\r\n      }\r\n      if (this.current.operator === '') {\r\n         this.current.previousOperand += operand;\r\n      }\r\n      if (this.current.operator !== '') {\r\n         this.current.nextOperand += operand;\r\n      }\r\n      this.changed();\r\n   },\r\n\r\n   hasPoint() {\r\n      const isPreviousOperandPoint =\r\n         this.current.operator == '' &&\r\n         this.current.previousOperand.includes('.');\r\n\r\n      const isNextOperandPoint =\r\n         this.current.operator !== '' && this.current.nextOperand.includes('.');\r\n\r\n      return isPreviousOperandPoint || isNextOperandPoint;\r\n   },\r\n\r\n   setOperator(operator) {\r\n      this.setSecondOperator();\r\n\r\n      if (this.current.previousOperand !== '') {\r\n         this.current.operator = operator;\r\n      }\r\n      this.changed();\r\n   },\r\n\r\n   setSecondOperator() {\r\n      if (this.current.nextOperand !== '') {\r\n         this.equalResult();\r\n         this.cleanOperands();\r\n      }\r\n      this.changed();\r\n   },\r\n\r\n   equalResult() {\r\n      switch (this.current.operator) {\r\n         case AVILABLE_OPERANDS.addition:\r\n            this.current.previousOperand =\r\n               +this.current.previousOperand + +this.current.nextOperand;\r\n            break;\r\n         case AVILABLE_OPERANDS.subtraction:\r\n            this.current.previousOperand =\r\n               this.current.previousOperand - this.current.nextOperand;\r\n            break;\r\n         case AVILABLE_OPERANDS.multiplication:\r\n            this.current.previousOperand =\r\n               this.current.previousOperand * this.current.nextOperand;\r\n            break;\r\n         case AVILABLE_OPERANDS.division:\r\n            this.current.previousOperand =\r\n               this.current.previousOperand / this.current.nextOperand;\r\n            break;\r\n         default:\r\n            return;\r\n      }\r\n      this.changed();\r\n   },\r\n\r\n   sliceOneSign() {\r\n      if (this.current.nextOperand !== '') {\r\n         this.current.nextOperand = this.current.nextOperand.slice(0, -1);\r\n      } else if (this.current.operator !== '') {\r\n         this.current.operator = this.current.operator.slice(0, -1);\r\n      } else if (this.current.previousOperand !== '') {\r\n         this.current.previousOperand = this.current.previousOperand\r\n            .toString()\r\n            .slice(0, -1);\r\n      }\r\n      this.changed();\r\n   },\r\n\r\n   cleanOperands() {\r\n      this.current.nextOperand = '';\r\n      this.current.operator = '';\r\n      this.changed();\r\n   },\r\n\r\n   cleanAll() {\r\n      this.current.previousOperand = '';\r\n      this.cleanOperands();\r\n   },\r\n});\r\n"],"names":["AVILABLE_THEME","AVILABLE_OPERANDS","$choiceSwitch","document","querySelector","$result","$smallButtons","$equal","$delete","$reset","setupListeners","state","addEventListener","event","choiceTheme","setSigns","equalResult","cleanAll","sliceOneSign","target","hasAttribute","setCurrentTheme","getAttribute","setOperand","setOperator","cleanOperands","setupRenderers","onChange","body","classList","current","theme","innerHTML","previousOperand","operator","nextOperand","_listeners","listener","this","push","changed","forEach","mode","operand","hasPoint","isPreviousOperandPoint","includes","isNextOperandPoint","setSecondOperator","slice","toString","bindDom"],"sourceRoot":""}